#version 400

layout(quads, equal_spacing, ccw) in;

uniform mat4 mvMatrix;
uniform mat4 mvpMatrix;
uniform mat4 norMatrix;
uniform vec4 lightPos;

vec4 posn;
out vec4 colour;

void main()
{
	float u = gl_TessCoord.x;
	float v = gl_TessCoord.y;
	
	float Au = (1 - u) * (1 - u) * (1 - u);
	float Bu = 3 * u   * (1 - u) * (1 - u);
	float Cu = 3 * u   * u       * (1 - u);
	float Du = u       * u       * u;
	
	float Av = (1 - v) * (1 - v) * (1 - v);
	float Bv = 3 * v   * (1 - v) * (1 - v);
	float Cv = 3 * v   * v       * (1 - v);
	float Dv = v       * v       * v;
	
	posn = Au * (
			   Av * gl_in[0].gl_Position +
			   Bv * gl_in[1].gl_Position +
			   Cv * gl_in[2].gl_Position +
			   Dv * gl_in[3].gl_Position
	       ) +
	       
	       Bu * (
			   Av * gl_in[4].gl_Position +
			   Bv * gl_in[5].gl_Position +
			   Cv * gl_in[6].gl_Position +
			   Dv * gl_in[7].gl_Position
	       ) +
	       
	       Cu * (
			   Av * gl_in[8].gl_Position +
			   Bv * gl_in[9].gl_Position +
			   Cv * gl_in[10].gl_Position +
			   Dv * gl_in[11].gl_Position
	       ) +
	       
	       Du * (
			   Av * gl_in[12].gl_Position +
			   Bv * gl_in[13].gl_Position +
			   Cv * gl_in[14].gl_Position +
			   Dv * gl_in[15].gl_Position
	       );

	gl_Position = mvpMatrix * posn;
	colour = vec4(1.0, 0.0, 0.0, 1.0);
	
}
